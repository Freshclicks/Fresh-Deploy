---
- name: Install Nginx GPG key
  run_once: true
  apt_key: url=http://nginx.org/keys/nginx_signing.key state=present

- name: Enable Nginx stable repo
  run_once: true
  apt_repository: repo='deb http://nginx.org/packages/ubuntu {{ ansible_lsb.codename }} nginx' state=present update_cache=yes

- name: Install nginx
  run_once: true
  apt: name=nginx state=present
  notify:
    - nginx restart
    - update-rc nginx

#- name: Create SSL directory
#  file:
#    mode: 0700
#    path: "{{ nginx_path }}/ssl"
#    state: directory

#- name: Generate strong unique Diffie-Hellman group.
#  command: openssl dhparam -out dhparams.pem 2048
#  args:
#    chdir: "{{ nginx_path }}/ssl"
#    creates: "{{ nginx_path }}/ssl/dhparams.pem"
#  notify: nginx reload
#  tags: [diffie-hellman]

#- name: Grab h5bp/server-configs-nginx
#  run_once: true
#  git:
#    repo: "https://github.com/h5bp/server-configs-nginx.git"
#    dest: "{{ nginx_path }}/h5bp-server-configs"
#    version: 82181a672a7c26f9bc8744fead80318d8a2520b1
#    force: yes

#- name: Move h5bp configs
#  run_once: true
#  command: cp -R {{ nginx_path }}/h5bp-server-configs/h5bp {{ nginx_path }}/h5bp
#  args:
#    creates: "{{ nginx_path }}/h5bp/"

- name: Ensure /etc/nginx directories exist
  run_once: true
  file: path={{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
    - /etc/nginx/global/server

- name: "Set up fastcgi-params"
  template: src=global/gzip.conf dest=/etc/nginx/global/

- name: "Set up gzip"
  template: src=global/fastcgi-params.conf dest=/etc/nginx/global/

- name: "Set up http"
  template: src=global/http.conf dest=/etc/nginx/global/

- name: "Set up limits"
  template: src=global/limits.conf dest=/etc/nginx/global/

- name: "Set up mime-type"
  template: src=global/mime-types.conf dest=/etc/nginx/global/

- name: "Set up exclusions"
  template: src=global/server/exclusions.conf dest=/etc/nginx/global/server/

- name: "Set up fastcgi"
  template: src=global/server/fastcgi-cache.conf dest=/etc/nginx/global/server/

- name: "Set up security"
  template: src=global/server/security.conf dest=/etc/nginx/global/server/

- name: "Set up ssl"
  template: src=global/server/ssl.conf dest=/etc/nginx/global/server/

- name: "Set up static file"
  template: src=global/server/static-files.conf dest=/etc/nginx/global/server/

- name: Configure /etc/nginx/nginx.conf
  template: src=nginx.conf dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  notify: nginx restart


- name: Disable default server
  file:
    path: "{{ nginx_path }}/sites-enabled/default"
    state: absent
  notify: reload nginx

#- name: Enable better default site to drop unknown requests
#  command: cp {{ nginx_path }}/h5bp-server-configs/sites-available/no-default {{ nginx_path }}/sites-enabled/no-default.conf
#  args:
#    creates: "{{ nginx_path }}/sites-enabled/no-default.conf"
#  notify: reload nginx

- name: Remove default conf.d
  run_once: true
  file: path=/etc/nginx/conf.d/default.conf state=absent

- name: Remove example ssl conf.d
  run_once: true
  file: path=/etc/nginx/conf.d/example_ssl.conf state=absent

- name: Ensure main docroot exists
  run_once: true
  file: path={{ www_root }} state=directory

- name: Set up master docroot
  run_once: true
  file: path={{ www_root }} state=directory owner={{ web_user }} group={{ web_group }} mode=0775

- name: Make sure Nginx is running
  run_once: true
  service: name=nginx state=started enabled=yes
