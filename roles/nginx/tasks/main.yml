---

# Setup NGINX Repository

- name: Transfer NGINX script
  run_once: true
  copy: src=templates/nginx-source.sh dest=/etc mode=0777
  become: true
  become_user: root

  # remove shell script after succesful install

- name: Execute NGINX script
  run_once: true
  shell: sudo bash /etc/nginx-source.sh
  become: true
  become_user: root
  
- name: add nginx init script for NGINX
  run_once: true
  template: src=templates/nginx.service dest=/etc/systemd/system/

- name: Start and enable NGINX service
  run_once: true
  shell: sudo systemctl start nginx.service 
  
  # removed as it seems the sysmlink is enabled during install.
  # sudo systemctl enable nginx.service

- name: Ensure /etc/nginx directories exist
  run_once: true
  file: path={{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
    - /etc/nginx/global 
    - /etc/nginx/server
    - /var/cache/nginx 
    - /var/cache/nginx/fastcgi_temp/
    - /usr/src/modules

#remove default files
- name: Remove default conf.d
  run_once: true
  file: path=/etc/nginx/conf.d/default.conf state=absent

- name: Remove example ssl conf.d
  run_once: true
  file: path=/etc/nginx/conf.d/example_ssl.conf state=absent

- name: Remove example ssl conf.d
  run_once: true
  file: path=/etc/nginx/conf.d/ssl.conf state=absent  

- name: Remove gent.conf
  run_once: true
  file: path=/etc/nginx/conf.d/agent.conf state=absent 

- name: Remove cache-file-descriptors.conf
  run_once: true
  file: path=/etc/nginx/conf.d/cache-file-descriptors.conf state=absent

- name: Remove gzip.conf
  run_once: true
  file: path=/etc/nginx/conf.d/gzip.conf state=absent

- name: Remove header.conf
  run_once: true
  file: path=/etc/nginx/conf.d/header.conf state=absent

- name: Remove real_ip.conf
  run_once: true
  file: path=/etc/nginx/conf.d/real_ip.conf state=absent

- name: Remove log.conf
  run_once: true
  file: path=/etc/nginx/conf.d/log.conf state=absent

- name: Remove fastcgi.conf
  run_once: true
  file: path=/etc/nginx/conf.d/fastcgi.conf state=absent

- name: Remove blockip.conf
  run_once: true
  file: path=/etc/nginx/conf.d/blockip.conf state=absent

- name: Remove limit_request.conf
  run_once: true
  file: path=/etc/nginx/conf.d/limit_request.conf state=absent
        
# Setup NGINX pagespeed

#- name: "Set server pagespeed"
#  template: src=server/pagespeed.conf dest=/etc/nginx/server/

- name: "Set global pagespeed"
  run_once: true
  template: src=global/pagespeed.conf dest=/etc/nginx/global/

## rest of the nginx configuration work


- name: "Set up fastcgi-params"
  run_once: true
  template: src=global/gzip.conf dest=/etc/nginx/global/

- name: "Set up gzip"
  run_once: true
  template: src=global/fastcgi-params.conf dest=/etc/nginx/global/

- name: "Set up http"
  run_once: true
  template: src=global/http.conf dest=/etc/nginx/global/

- name: "Set up limits"
  run_once: true
  template: src=global/limits.conf dest=/etc/nginx/global/

- name: "Set up perl lowercase"
  run_once: true
  template: src=global/perl-lowercase.conf dest=/etc/nginx/global/

- name: "Set up mime-type"
  run_once: true
  template: src=global/mime-types.conf dest=/etc/nginx/global/

- name: "Set up exclusions"
  run_once: true
  template: src=server/exclusions.conf dest=/etc/nginx/server/

- name: "Set up fastcgi"
  run_once: true
  template: src=server/fastcgi-cache.conf dest=/etc/nginx/server/

- name: "Set up security"
  run_once: true
  template: src=server/security.conf dest=/etc/nginx/server/

- name: "Set up ssl"
  run_once: true
  template: src=server/ssl.conf dest=/etc/nginx/server/

- name: "Set up static file"
  run_once: true
  template: src=server/static-files.conf dest=/etc/nginx/server/

- name: Configure /etc/nginx/nginx.conf
  run_once: true
  template: src=nginx.conf dest=/etc/nginx/nginx.conf owner=root group=root mode=0644
  notify: nginx restart


- name: Disable default server
  run_once: true
  file:
    path: "{{ nginx_path }}/sites-enabled/default"
    state: absent
  notify: reload nginx


- name: Ensure main docroot exists
  run_once: true
  file: path={{ www_root }} state=directory

- name: Set up master docroot
  run_once: true
  file: path={{ www_root }} state=directory owner={{ web_user }} group={{ web_group }} mode=0775

- name: Make sure Nginx is running
  run_once: true
  service: name=nginx state=started enabled=yes
