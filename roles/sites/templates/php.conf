# Define path to cache and memory zone. The memory zone should be unique.
# keys_zone=ssl-fastcgi-cache.com:100m creates the memory zone and sets the maximum size in MBs.
# inactive=730h (one month) will remove cached items that haven't been accessed for 1 month or more.
fastcgi_cache_path {{ www_root }}/{{ inventory_hostname }}/cache levels=1:2 keys_zone={{ inventory_hostname }}:60m inactive=730h;

pagespeed FileCachePath {{ www_root }}/{{ inventory_hostname }}/cache/pagespeed-cache;
pagespeed ForceCaching on;
pagespeed FileCacheSizeKb            102400;
pagespeed FileCacheCleanIntervalMs   3600000;
pagespeed FileCacheInodeLimit        500000;

server {
    # Ports to listen on, uncomment one.
    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;
    listen      80;
    listen [::]:80;
    server_name     {{ inventory_hostname }};

    root            {{ www_root }}/{{ inventory_hostname }}/public;

    index index.php index.htm index.html;

    access_log  {{ www_root }}/{{ inventory_hostname }}/log/{{ inventory_hostname }}.access.log;
    error_log   {{ www_root }}/{{ inventory_hostname }}/log/{{ inventory_hostname }}.error.log;
    pagespeed LogDir {{ www_root }}/{{ inventory_hostname }}/log/pagespeed;

    # Exclusions
    include global/server/exclusions.conf;

    # Security
    include global/server/security.conf;

    # Static Content
    include global/server/static-files.conf;

    # Fastcgi cache rules
    include global/server/fastcgi-cache.conf;

    # SSL rules - uncomment if using SSL.
    # include /etc/nginx/global/server/ssl-{{ inventory_hostname }}.conf;
    # include global/server/ssl.conf;

    pagespeed Domain *.{{ inventory_hostname }};
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  	    add_header "" "";
    }

    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    location / {
    		try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
    		try_files $uri =404;
    		include global/fastcgi-params.conf;

    		fastcgi_pass unix:/run/php/php7.0-fpm.sock;

    		# Skip cache based on rules in global/server/fastcgi-cache.conf.
    		fastcgi_cache_bypass $skip_cache;
    		fastcgi_no_cache $skip_cache;

    		# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
    		fastcgi_cache {{ inventory_hostname }};

    		# Define caching time.
    		fastcgi_cache_valid 730h;
    }

}

# Redirect www to non-www
server {
	listen 80;
	listen [::]:80;
	server_name www.{{ inventory_hostname }};
	return 301 $scheme://{{ inventory_hostname }}$request_uri;
}

# Redirect http to https
#server {
    #    listen 80;
    #    listen [::]:80;
    #   server_name {{ inventory_hostname }} www.{{ inventory_hostname }};
    #    return 301 https://{{ inventory_hostname }}$request_uri;
#}

# Redirect www to non-www
#server {
    #    listen 443;
    #    listen [::]:443;
    #    server_name www.{{ inventory_hostname }};
    #    return 301 https://{{ inventory_hostname }}$request_uri;
#}